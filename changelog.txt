PowerShell Inventory Scripts - Kendal Van Dyke.2012.09.28
- Added SQL Agent Job schedules to function Get-SqlAgentJobInformation in module SqlServerDatabaseServerInformation
- Added SQL Agent Job schedules tab to function Export-SqlWindowsInventoryToExcel in module SqlServerInventory


PowerShell Inventory Scripts - Kendal Van Dyke.2012.11.28
- Added formatting to Excel output (now there's options for using Office color themes and dates & numbers are formatted for sorting - no more formula errors!)
	- Recommended color themes:
		- "Waveform" (Office 2010)
		- "Blue" (Office 2013)
- Fixed some issues with cleaning up objects when a Runspace was disposed. This was throwing exceptions in some of my environments. No more!
- Added more stuff I'm collecting from SQL Server and showing in Excel
	- Server Audits
	- Server Audit Specifications
	- Credentials
	- Endpoints
	- Server Triggers
	- VLF counts for transaction log files
	- Server Install & Start Dates
	- Agent Job Steps
	- Agent Job Alerts
	- Agent Job Notifications
	- Agent Alerts
	- Agent Notifications
	- Probably more stuff that I can't remember!
- Updated progress indicators throughout so you have a better idea of what the script's doing
	- (I still have to add better progress reporting to the Windows Inventory piece of this)
- Renamed modules and function calls behind the scenes to refer to the DB Engine as...the DB Engine! (I was calling it Database Server)
- Changed the names of files that are written to disk


PowerShell Inventory Scripts - Kendal Van Dyke.2012.12.19
- Reworked LogHelper module to use synchronized queues for thread safety
- Updated scripts and modules using the LogHelper module to take advantage of synchronized queues for logging
- Fixed SQL Server service port detection in NetworkScan module (it never worked correctly!)
- Updated SQLServerDatabaseEngineInformation module to connect on non-default ports
- Updated SQLServerDatabaseEngineInformation module to collect global trace flags
- Updated SQLServerInventory module to show global trace flags in Excel output


PowerShell Inventory Scripts - Kendal Van Dyke.2012.12.20
- Fixed a problem created by the previous version's addition of port detection that prevented showing Windows information for Database Engine services in Excel


PowerShell Inventory Scripts - Kendal Van Dyke.2012.12.27
- Updated SQLServerDatabaseEngineInformation module to collect Database Mail settings (2005 and higher)
- Updated SQLServerInventory module to show Database Mail Settings in Excel output
- Added date & number formatting to Excel output for Windows Inventory (no more formula errors!)
- Reduced how long it takes to apply formatting to Excel output
- Added error message and line number details to logging in SqlServerDatabaseEngineInformation and WindowsMachineInformation modules
- Refactored Logging:
	- Changed Logging Preferences from 'none','minimal','normal', and 'verbose' to 'none','standard','verbose', and 'debug'
	- Changed Logging Message levels from 'minimal','normal','verbose', and 'debug' to 'information','verbose','debug','error', and 'warning'
	- Added fractions of seconds to log file output
	- Added symbols to Log file to represent message levels
		- ? for Information
		- $ for Verbose
		- * for Debug
		- ! for Error
		- + for Warning
- Updated all modules and scripts to use refactored logging


PowerShell Inventory Scripts - Kendal Van Dyke.2013.01.08
- Removed single tab w\ vertical formatting for Server, Database, and Agent config; replaced with multiple tabs and horizontal formatting (for filtering)
- Updated SQLServerDatabaseEngineInformation module to:
	- Collect Asymmetric and Symmetric key settings (2005 and higher)
	- Collect Resource Governor settings (2005 and higher)
	- Use PSObject instead of hashtable for $ServerInformation
	- Query SERVERPROPERTY for some properties instead of using SMO (to get around inconsistencies between versions of SMO and SQL Server)
	- Add MinimumValue, MaximumValue, IsAdvanced, IsDynamic, FriendlyName, and Description properties to Server Configuration objects coming from sys.configurations
	- Collect Windows Failover Cluster and AlwaysOn configuration information (at the server level)
	- Show Windows Failover Cluster and AlwaysOn configuration information (at the server level)
	- Execute custom T-SQL for enumerating Server Role and Database Role "Member Of" status (previously relied on method calls limited to specific versions of SMO)
- Updated SQLServerInventory module to:
	- Show Asymmetric and Symmetric key settings settings in Excel output
	- Show Windows Failover Cluster and AlwaysOn configuration information in Excel output
	- Show Resource Governor settings in Excel output
	- Limit SQL Agent Job Step command column to 32,767 characters (Excel cell max)
 	- Fixed minor formatting issue with Excel output that wrote blank lines for servers\databases with no information


PowerShell Inventory Scripts - Kendal Van Dyke.2013.01.09
- Fixed an issue in Export-SqlWindowsInventoryToExcel (SqlServerInventory.psm1 ) where lengthy SQL Agent Job Steps would cause an (E_OUTOFMEMORY) exception when applying formatting


PowerShell Inventory Scripts - Kendal Van Dyke.2013.03.08
- General updates
	- Scripts and public functions in all modules now have true PowerShell documentation so they work nicely with Get-Help
	- Lost of minor 1 line fixes I know I made but was too lazy to document at the time and have since forgotten exactly what they were....but they're in there, trust me!
	- Removed -WindowsAuthentication parameter from all scripts and modules. If using SQL authentication provide a username\password, otherwise everything is Windows Authentication by default
	- Removed SubnetFilter parameter from all modules that used it, replaced with better filtering parameters: 
		- ExcludeSubnet to exclude subnet(s)
		- LimitSubnet to limit the scope of scanning to a specific subnet(s)
		- ExcludeComputerName to exclude computers by name
- Updates to SQLServerDatabaseEngineInformation.psm1 module:
	- Added SQL Trace information
	- Added additional properties to Database Users, Database Roles, Application Roles, Certificates, Schemas in Get-DatabaseInformation
	- Corrected a problem in Get-SqlAgentConfigurationInformation where values for IncludeExecutionTraceMessages and MailProfile were not being populated properly
	- Fixed a bug in Get-SqlAgentJobInformation that was using the EventLogCondition for DeleteJobCondition on Agent Job Notifications
	- Added comments next to SMO properties to show datatypes returned by SMO
	- Added function Get-DatabaseEngineTypeValue and updated all calls to Get-DatabaseServerTypeValue to use Get-DatabaseEngineTypeValue
	- Removed function Get-DatabaseServerTypeValue
	- Added Server Permissions to Get-ServerConfigurationInformation (SQLServerDatabaseEngineInformation.psm1)
	- Added Database Permissions to Get-DatabaseInformation (SQLServerDatabaseEngineInformation.psm1)
	- Database objects information! w00t! w00t!
		- OK, don't get *too* excited - I'm just collecting them for now. Still need to write the functions to export the details to Excel.
	- Now supports Windows Azure SQL Database
		- Still need to figure out how to work this out with the SqlServerInventory module so that a WASD can be included in inventory results
- Updates to NetworkScan.psm1 module:
	- Updated Find-SqlServerService to gather service information for SQL Server 2000 - **AT LAST** SQL 2000 can be included in an inventory as well!! (Yippeeeeee!)	
- Updates to SqlServerInventory.psm1 module:
	- Fixed output of Last Known DBCC date in Export-SqlDatabaseEngineInventoryToExcel - was previously showing blank b\c it wasn't referencing the value in the inventory object correctly
	- Changed tab order, names, and colors in Export-SqlDatabaseEngineInventoryToExcel to reflect SSMS object explorer hierarchy
	- Updated Export-SqlDatabaseEngineInventoryToExcel to show additional database user properties
	- Added functions Compress-SqlServerInventory and Expand-CompressedSqlServerInventory. These use the .NET GZstream libraries to compress\expand the inventory in order to reduce the size of the CLIXML file that's written to disk
	- Fixed an bug in Export-WindowsInventoryToExcel (WindowsInventory.psm1) that was displaying "System.Collections.ArrayList" as the value for IP Address, Subnet, Gateway, & DNS Server on the Network Adapter tab
- Updates to WindowsInventory.psm1 module:
	- Minor change to Export-WindowsInventoryToExcel for how number of rows in each Excel worksheet are calculated when writing the file
	- Fixed a bug in Export-WindowsInventoryToExcel on "Worksheet 4: Network Adapaters" where IP Addresses, Subnets, Default Gateway, and DNS Servers were being written as "System.Collections.ArrayList" instead of their actual values 
	

PowerShell Inventory Scripts - Kendal Van Dyke.2013.04.05
- Updates to SqlServerInventory.psm1 module:
	- Changed name of functions:
		- Export-SqlWindowsInventoryToExcel renamed to Export-SqlServerInventoryDatabaseEngineConfigToExcel
		- Export-SqlDatabaseEngineInventoryToExcel renamed to Export-SqlServerInventoryWindowsInventoryToExcel
	- Configuration Assessment (similar to sp_Blitz and Microsoft RAP)
		- Added function Get-SqlServerInventoryDatabaseEngineAssessment to perform an assessment of the SQL Server Database Engine Inventory returned by Get-SqlServerInventory. (Think Brent Ozar's sp_Blitz script written in PowerShell)
		- Added function Export-SqlDatabaseEngineInventoryAssessmentToExcel to write the output of Get-SqlServerInventoryDatabaseEngineAssessment to an Excel file.
	- Database Objects!!
		- Added function Export-SqlServerInventoryDatabaseEngineDbObjectsToExcel to write the Database Engine DB Objects returned by Get-SqlServerInventory to an Excel file.
	- Added functions to support import\export of CliXml to\from disk:
		- Export-SqlServerInventoryToGzClixml to write a GZip compressed inventory to disk
		- Import-SqlServerInventoryFromGzClixml to import a GZip compressed inventory from disk
		- ConvertFrom-GzCliXml to deserialize a GZip compressed CliXml object
		- ConvertTo-GzCliXml to serialize an object to GZip compressed CliXml
		- Export-GzCliXml to serialize an object to a GZip compressed CliXml file
		- Import-GzCliXml to deserialize a GZip compressed CliXml file
	- Modified Get-SqlServerInventory to support Windows Azure SQL Database. (This is big - there aren't any 3rd party products that document WASD!)
- Updates to SQLServerDatabaseEngineInformation.psm1 module:
	- Support for collecting information from Windows Azure SQL Database
	- Fixed bug where FILESTREAM data files had "Rows Data" instead of "FILESTREAM Data" for the FileType value
	- Changed Get-ResourceGovernorInformation to use $NULL for Enabled and ReconfigurePending for unsupported servers
	- Added checks for blank password and passwords that matched the login name in 
	- Removed leading and trailing spaced from object definitions
	- Added switch parameters to Get-DatabaseInformation
		-IncludeObjectPermissions to include object permissions
		-IncludeObjectInformation to include information about database objects (tables, views, procedures, etc)
		-IncludeSystemObjects to include system objects in addition to user objects
- Updates to WindowsInventory.psm1 module:
	- Changed how strings are concatenated in Export-WindowsInventoryToExcel
	- Switched to using [System.Version] constants instead of [Single] constants for checking OS version number
	- Modified Get-DesktopSessionInformation to fallback to WMI and Win32_Process if there was an error calling Get-RDSession
- Update to Get-SqlServerInventoryToClixml.ps1:
	- Changed parameter name from "compress" to "zip" to better represent what the parameter does
- Update to Get-WindowsInventoryToClixml.ps1:
	- Changed parameter name from "compress" to "zip" to better represent what the parameter does


	

- What's planned for vNext:
	- Gather server and database permissions for SQL 2000
	- Add support for -whatif
	- Add support for alternate credentials
	- Gather more data!
		- Service Protocol information (TCP\IP, Named Pipes, Shared Memory, etc.)
		- AlwaysOn Availability Groups (Group Names, Database Members, etc.)
		- Performance data from server and database DMVs & DMFs
	- Performance analysis report
	- Compare server configurations
	- Output to other formats (Word, XML, ?)
- What do you want to see in here?
	- Email me: kendal.vandyke@gmail.com